name: CMake + SonarCloud Analysis

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout submodules
      run: git submodule update --init --recursive

#     - name: Packages
#       run: |
#         sudo apt-get install -y build-essential git cmake libsdl2-2.0 libsdl2-dev
#         git clone https://github.com/gabime/spdlog.git
#         cd spdlog && mkdir build && cd build
#         cmake .. && make -j
        
    - name: Build and Sonar
      shell: bash
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git cmake libsdl2-2.0 libsdl2-dev
        
        git clone https://github.com/gabime/spdlog.git
          cd spdlog && mkdir build && cd build
          cmake .. && make -j
          cd ..
        cd ..

        curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        unzip -q build-wrapper-linux-x86.zip
        cmake -DCMAKE_BUILD_TYPE=MinSizeRel -G "CodeBlocks - Unix Makefiles" .
        build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-outputs cmake --build . --target zxpaint -- -j 2

        curl -L -O https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
        unzip sonar-scanner-cli-4.4.0.2170-linux.zip
        sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner
